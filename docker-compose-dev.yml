version: '3.8'
services:
  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_USER=rinha
      - POSTGRES_PASSWORD=backend
      - POSTGRES_DB=RinhaBackend2024Q1
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./init-functions.sql:/docker-entrypoint-initdb.d/init-functions.sql
      - ./backup:/var/lib/postgresql/data
    command: postgres -c max_connections=10 -c checkpoint_timeout=600 -c max_wal_size=4096 -c synchronous_commit=0 -c fsync=0 -c full_page_writes=0
    # command: 'postgres -c max_connections=1000 -c shared_buffers=128MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "340MB"
  api01: &api
    image: sonederbr/rinha-api
    build: ./
    hostname: api01
    environment:
      - ASPNETCORE_URLS=http://+:8080;http://+:8081
      - ASPNETCORE_ENVIRONMENT=Production
    expose:
      - "8080"
    ports:
      - "8081:8080"
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "100MB"
  api02:
    <<: *api
    hostname: api02
    ports:
      - "8082:8080"
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - db
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "10MB"
  prometheus:
    build: ./metrics/prometheus
    hostname: prometheus01
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - db
      - nginx
  
  grafana:
    build: ./metrics/grafana
    hostname: grafana01
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://rinha:backend@db/RinhaBackend2024Q1?sslmode=disable"
      # DATA_SOURCE_NAME: "postgresql://rinha:backend@db:5432/RinhaBackend2024Q1?sslmode=disable"
      # - DATA_SOURCE_URI=db:5432/postgres?sslmode=disable
      # - DATA_SOURCE_USER=rinha https://dev.to/nelsoncode/how-to-monitor-posgresql-with-prometheus-and-grafana-docker-24c8
      # - DATA_SOURCE_PASS=backend
    depends_on:
      - db
      - prometheus
      - grafana
    links:
      - db
      - prometheus

networks:
  default:
    driver: bridge
    name: nw-rinha
